{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrio\\\\Downloads\\\\Dot Batch\\\\Backend 4\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst API_URL = process.env.REACT_APP_URL;\nexport function AppContextProvider({\n  children\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [blogs, setblogs] = useState([]);\n  async function fetchBlogs() {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/posts`);\n      const datas = await response.json();\n      const blogs = datas.data;\n      setblogs(blogs);\n    } catch (err) {\n      console.error(\"Error fetching Data\" + err);\n    }\n    setLoading(false);\n  }\n  const [blog, setBlog] = useState([]);\n  const location = useLocation();\n  async function fetchBlog() {\n    setLoading(true);\n    try {\n      const id = location.pathname.split('/').at(-1);\n      const res = await fetch(`${API_URL}/post/${id}`);\n      const response = await res.json();\n      const blogData = response.data;\n      setBlog(blogData);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  }\n  async function likehandler(id, user) {\n    await fetch(`${API_URL}/likes/like`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post: id,\n        user: user\n      })\n    });\n    fetchBlogs();\n  }\n  async function unlikehandler(id) {\n    await fetch(`${API_URL}/likes/unlike`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post: id,\n        user: user\n      })\n    });\n    fetchBlogs();\n  }\n  const [user, setUser] = useState(\"Om\");\n  function userchangeHandler(event) {\n    setUser(event.target.value);\n    console.log(user);\n  }\n  const value = {\n    blogs,\n    fetchBlogs,\n    loading,\n    blog,\n    fetchBlog,\n    likehandler,\n    userchangeHandler,\n    user,\n    unlikehandler\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 12\n  }, this);\n}\n_s(AppContextProvider, \"o54WQ+x+SF5/KLLp1RIxd8DyYiU=\", false, function () {\n  return [useLocation];\n});\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","useLocation","jsxDEV","_jsxDEV","AppContext","API_URL","process","env","REACT_APP_URL","AppContextProvider","children","_s","loading","setLoading","blogs","setblogs","fetchBlogs","response","fetch","datas","json","data","err","console","error","blog","setBlog","location","fetchBlog","id","pathname","split","at","res","blogData","likehandler","user","method","headers","body","JSON","stringify","post","unlikehandler","setUser","userchangeHandler","event","target","value","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shrio/Downloads/Dot Batch/Backend 4/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nexport const AppContext = createContext()\r\n\r\nconst API_URL = process.env.REACT_APP_URL\r\n\r\nexport function AppContextProvider({children}){\r\n\r\n    const [loading,setLoading]=useState(false)\r\n    \r\n    const [blogs,setblogs]=useState([])\r\n    \r\n    async function fetchBlogs(){\r\n        setLoading(true)\r\n        try{\r\n            const response=await fetch(`${API_URL}/posts`)\r\n            const datas = await response.json()\r\n            const blogs=datas.data\r\n            setblogs(blogs)\r\n        }\r\n        catch(err){\r\n            console.error(\"Error fetching Data\"+err)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const [blog,setBlog]=useState([])\r\n\r\n    const location=useLocation()\r\n\r\n    async function fetchBlog() {\r\n        setLoading(true)\r\n        try{\r\n            const id=location.pathname.split('/').at(-1)\r\n            const res = await fetch(`${API_URL}/post/${id}`)\r\n            const response=await res.json()\r\n            const blogData=response.data\r\n            setBlog(blogData)\r\n        }\r\n        catch(err){\r\n            console.error(err)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    async function likehandler(id,user) {\r\n        await fetch(`${API_URL}/likes/like`,{\r\n            method:\"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                post:id,\r\n                user:user\r\n            })\r\n        })\r\n        fetchBlogs()\r\n    }\r\n\r\n    async function unlikehandler(id) {\r\n        await fetch(`${API_URL}/likes/unlike`,{\r\n            method:\"DELETE\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                post:id,\r\n                user:user\r\n            })\r\n        })\r\n        fetchBlogs()\r\n    }\r\n\r\n    const [user,setUser] = useState(\"Om\")\r\n\r\n    function userchangeHandler(event){\r\n        setUser(event.target.value)\r\n        console.log(user)\r\n    }\r\n\r\n    const value={\r\n        blogs,\r\n        fetchBlogs,\r\n        loading,\r\n        blog,\r\n        fetchBlog,\r\n        likehandler,\r\n        userchangeHandler,\r\n        user,\r\n        unlikehandler\r\n    }\r\n\r\n    return <AppContext.Provider value={value}>\r\n        {children}\r\n    </AppContext.Provider>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}