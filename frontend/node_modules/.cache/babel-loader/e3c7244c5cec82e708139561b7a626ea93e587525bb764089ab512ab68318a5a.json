{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrio\\\\Downloads\\\\Dot Batch\\\\Backend 4\\\\frontend\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst API_URL = process.env.REACT_APP_URL;\nexport function AppContextProvider({\n  children\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [blogs, setblogs] = useState([]);\n  async function fetchBlogs() {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/posts`);\n      const datas = await response.json();\n      const blog = datas.data;\n      setblogs(blog);\n    } catch (err) {\n      console.error(\"Error fetching Data\" + err);\n    }\n    setLoading(false);\n  }\n  const [commentform, setcommentform] = useState({\n    post: blog._id,\n    user: \"\",\n    body: \"\"\n  });\n  function formHandler(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setcommentform(prev => {\n      return {\n        ...prev,\n        [name]: value\n      };\n    });\n  }\n  function commentsubmitHandler(event) {\n    event.preventDefault();\n    console.log(form);\n    fetch(`${API_URL}/comment/create`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post: commentform.post,\n        user: commentform.user,\n        body: commentform.body\n      })\n    });\n  }\n  const value = {\n    blogs,\n    fetchBlogs,\n    loading,\n    commentsubmitHandler,\n    commentform,\n    setcommentform\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n}\n_s(AppContextProvider, \"+Jd+6c/maffQ5VGmdczspiLj1a0=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","AppContext","API_URL","process","env","REACT_APP_URL","AppContextProvider","children","_s","loading","setLoading","blogs","setblogs","fetchBlogs","response","fetch","datas","json","blog","data","err","console","error","commentform","setcommentform","post","_id","user","body","formHandler","event","name","value","target","prev","commentsubmitHandler","preventDefault","log","form","method","headers","JSON","stringify","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shrio/Downloads/Dot Batch/Backend 4/frontend/src/context/AppContext.jsx"],"sourcesContent":["import { createContext } from \"react\"\r\nimport { useState } from \"react\"\r\n\r\nexport const AppContext = createContext()\r\n\r\nconst API_URL = process.env.REACT_APP_URL\r\n\r\nexport function AppContextProvider({children}){\r\n\r\n    const [loading,setLoading]=useState(false)\r\n    \r\n    const [blogs,setblogs]=useState([])\r\n    \r\n    async function fetchBlogs(){\r\n        setLoading(true)\r\n        try{\r\n            const response=await fetch(`${API_URL}/posts`)\r\n            const datas = await response.json()\r\n            const blog=datas.data\r\n            setblogs(blog)\r\n        }\r\n        catch(err){\r\n            console.error(\"Error fetching Data\"+err)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const [commentform, setcommentform] = useState({\r\n        post: blog._id,\r\n        user: \"\",\r\n        body: \"\"\r\n    })\r\n\r\n    function formHandler(event) {\r\n        const { name, value } = event.target\r\n        setcommentform(prev => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    function commentsubmitHandler(event){\r\n        event.preventDefault()\r\n        console.log(form)\r\n        fetch(`${API_URL}/comment/create`,{\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                post:commentform.post,\r\n                user:commentform.user,\r\n                body:commentform.body\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const value={\r\n        blogs,\r\n        fetchBlogs,\r\n        loading,\r\n        commentsubmitHandler,\r\n        commentform,\r\n        setcommentform\r\n    }\r\n\r\n    return <AppContext.Provider value={value}>\r\n        {children}\r\n    </AppContext.Provider>\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,UAAU,gBAAGJ,aAAa,CAAC,CAAC;AAEzC,MAAMK,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa;AAEzC,OAAO,SAASC,kBAAkBA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAE1C,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACZ,QAAQ,CAAC,KAAK,CAAC;EAE1C,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EAEnC,eAAee,UAAUA,CAAA,EAAE;IACvBH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACC,MAAMI,QAAQ,GAAC,MAAMC,KAAK,CAAC,GAAGb,OAAO,QAAQ,CAAC;MAC9C,MAAMc,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACnC,MAAMC,IAAI,GAACF,KAAK,CAACG,IAAI;MACrBP,QAAQ,CAACM,IAAI,CAAC;IAClB,CAAC,CACD,OAAME,GAAG,EAAC;MACNC,OAAO,CAACC,KAAK,CAAC,qBAAqB,GAACF,GAAG,CAAC;IAC5C;IACAV,UAAU,CAAC,KAAK,CAAC;EACrB;EAEA,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC;IAC3C2B,IAAI,EAAEP,IAAI,CAACQ,GAAG;IACdC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,SAASC,WAAWA,CAACC,KAAK,EAAE;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCT,cAAc,CAACU,IAAI,IAAI;MACnB,OAAO;QACH,GAAGA,IAAI;QACP,CAACH,IAAI,GAAGC;MACZ,CAAC;IACL,CAAC,CAAC;EACN;EAEA,SAASG,oBAAoBA,CAACL,KAAK,EAAC;IAChCA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtBf,OAAO,CAACgB,GAAG,CAACC,IAAI,CAAC;IACjBvB,KAAK,CAAC,GAAGb,OAAO,iBAAiB,EAAC;MAC9BqC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACJ,cAAc,EAAE;MACpB,CAAC;MACDZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAAC;QACjBjB,IAAI,EAACF,WAAW,CAACE,IAAI;QACrBE,IAAI,EAACJ,WAAW,CAACI,IAAI;QACrBC,IAAI,EAACL,WAAW,CAACK;MACrB,CAAC;IACL,CAAC,CAAC;EAEN;EAEA,MAAMI,KAAK,GAAC;IACRrB,KAAK;IACLE,UAAU;IACVJ,OAAO;IACP0B,oBAAoB;IACpBZ,WAAW;IACXC;EACJ,CAAC;EAED,oBAAOxB,OAAA,CAACC,UAAU,CAAC0C,QAAQ;IAACX,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EACpCA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAC1B;AAACvC,EAAA,CAjEeF,kBAAkB;AAAA0C,EAAA,GAAlB1C,kBAAkB;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}